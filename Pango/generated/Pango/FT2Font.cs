// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Pango {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class FT2Font : GLib.Opaque {

		[DllImport(NativeMethods.Pango, CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr pango_ft2_font_get_coverage(IntPtr font, IntPtr language);

		[Obsolete]
		public static Pango.Coverage GetCoverage(Pango.Font font, Pango.Language language) {
			IntPtr raw_ret = pango_ft2_font_get_coverage(font == null ? IntPtr.Zero : font.Handle, language == null ? IntPtr.Zero : language.Handle);
			Pango.Coverage ret = raw_ret == IntPtr.Zero ? null : (Pango.Coverage) GLib.Opaque.GetOpaque (raw_ret, typeof (Pango.Coverage), false);
			return ret;
		}

		[DllImport(NativeMethods.Pango, CallingConvention = CallingConvention.Cdecl)]
		static extern int pango_ft2_font_get_kerning(IntPtr font, uint left, uint right);

		[Obsolete]
		public static int GetKerning(Pango.Font font, uint left, uint right) {
			int raw_ret = pango_ft2_font_get_kerning(font == null ? IntPtr.Zero : font.Handle, left, right);
			int ret = raw_ret;
			return ret;
		}

		public FT2Font(IntPtr raw) : base(raw) {}

#endregion
	}
}
